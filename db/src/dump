--
-- PostgreSQL database dump
--

-- Dumped from database version 15.4 (Homebrew)
-- Dumped by pg_dump version 15.4 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: uninadelivery; Type: SCHEMA; Schema: -; Owner: zgenny
--

CREATE SCHEMA uninadelivery;


ALTER SCHEMA uninadelivery OWNER TO zgenny;

--
-- Name: alphanumericstring; Type: DOMAIN; Schema: uninadelivery; Owner: riccardoelena
--

CREATE DOMAIN uninadelivery.alphanumericstring AS text
	CONSTRAINT alphanumericstring_check CHECK ((VALUE ~ '^\w+$'::text));


ALTER DOMAIN uninadelivery.alphanumericstring OWNER TO riccardoelena;

--
-- Name: alphnumstring; Type: DOMAIN; Schema: uninadelivery; Owner: riccardoelena
--

CREATE DOMAIN uninadelivery.alphnumstring AS text
	CONSTRAINT alphnumstring_check CHECK ((VALUE ~ '^\w*$'::text));


ALTER DOMAIN uninadelivery.alphnumstring OWNER TO riccardoelena;

--
-- Name: deposittype; Type: TYPE; Schema: uninadelivery; Owner: riccardoelena
--

CREATE TYPE uninadelivery.deposittype AS ENUM (
    'City',
    'State',
    'Country',
    'Central'
);


ALTER TYPE uninadelivery.deposittype OWNER TO riccardoelena;

--
-- Name: drivinglicencetype; Type: TYPE; Schema: uninadelivery; Owner: riccardoelena
--

CREATE TYPE uninadelivery.drivinglicencetype AS ENUM (
    'BE',
    'CE'
);


ALTER TYPE uninadelivery.drivinglicencetype OWNER TO riccardoelena;

--
-- Name: emailstring; Type: DOMAIN; Schema: uninadelivery; Owner: riccardoelena
--

CREATE DOMAIN uninadelivery.emailstring AS text
	CONSTRAINT emailstring_check CHECK ((VALUE ~ '^[a-zA-Z0-9]+[a-zA-Z0-9.]*[a-zA-Z0-9]+@[a-zA-Z.]+\.[a-zA-Z]{2,}$'::text));


ALTER DOMAIN uninadelivery.emailstring OWNER TO riccardoelena;

--
-- Name: letterstring; Type: DOMAIN; Schema: uninadelivery; Owner: riccardoelena
--

CREATE DOMAIN uninadelivery.letterstring AS text
	CONSTRAINT letterstring_check CHECK ((VALUE ~ '^[a-zA-Z]+$'::text));


ALTER DOMAIN uninadelivery.letterstring OWNER TO riccardoelena;

--
-- Name: numericstring; Type: DOMAIN; Schema: uninadelivery; Owner: riccardoelena
--

CREATE DOMAIN uninadelivery.numericstring AS text
	CONSTRAINT numericstring_check CHECK ((VALUE ~ '^\d*$'::text));


ALTER DOMAIN uninadelivery.numericstring OWNER TO riccardoelena;

--
-- Name: transporttype; Type: TYPE; Schema: uninadelivery; Owner: riccardoelena
--

CREATE TYPE uninadelivery.transporttype AS ENUM (
    'WheeledSmall',
    'WheeledLarge',
    'Rails',
    'Water',
    'Air'
);


ALTER TYPE uninadelivery.transporttype OWNER TO riccardoelena;

--
-- Name: worldzone; Type: TYPE; Schema: uninadelivery; Owner: riccardoelena
--

CREATE TYPE uninadelivery.worldzone AS ENUM (
    'NA',
    'EUW',
    'EUNE',
    'LATAM',
    'MIDEAST',
    'CKJ',
    'SEA',
    'IND',
    'RUS',
    'STAN',
    'OC',
    'AFN',
    'AFC',
    'AFS'
);


ALTER TYPE uninadelivery.worldzone OWNER TO riccardoelena;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: address; Type: TABLE; Schema: uninadelivery; Owner: riccardoelena
--

CREATE TABLE uninadelivery.address (
    addressno uninadelivery.alphnumstring NOT NULL,
    street uninadelivery.alphnumstring NOT NULL,
    zipcode uninadelivery.numericstring NOT NULL,
    country uninadelivery.letterstring NOT NULL,
    CONSTRAINT addressno_domain CHECK (((addressno)::text ~ '^[1-9]\d*[a-z]?(?:BIS)?$'::text))
);


ALTER TABLE uninadelivery.address OWNER TO riccardoelena;

--
-- Name: area; Type: TABLE; Schema: uninadelivery; Owner: riccardoelena
--

CREATE TABLE uninadelivery.area (
    zipcode uninadelivery.numericstring NOT NULL,
    city uninadelivery.letterstring NOT NULL,
    state uninadelivery.letterstring NOT NULL,
    country uninadelivery.letterstring NOT NULL,
    worldzone uninadelivery.worldzone NOT NULL
);


ALTER TABLE uninadelivery.area OWNER TO riccardoelena;

--
-- Data for Name: address; Type: TABLE DATA; Schema: uninadelivery; Owner: riccardoelena
--

COPY uninadelivery.address (addressno, street, zipcode, country) FROM stdin;
\.


--
-- Data for Name: area; Type: TABLE DATA; Schema: uninadelivery; Owner: riccardoelena
--

COPY uninadelivery.area (zipcode, city, state, country, worldzone) FROM stdin;
\.


--
-- Name: address address_pk; Type: CONSTRAINT; Schema: uninadelivery; Owner: riccardoelena
--

ALTER TABLE ONLY uninadelivery.address
    ADD CONSTRAINT address_pk PRIMARY KEY (addressno, street, zipcode, country);


--
-- Name: area area_pk; Type: CONSTRAINT; Schema: uninadelivery; Owner: riccardoelena
--

ALTER TABLE ONLY uninadelivery.area
    ADD CONSTRAINT area_pk PRIMARY KEY (zipcode, country);


--
-- Name: address address_fk; Type: FK CONSTRAINT; Schema: uninadelivery; Owner: riccardoelena
--

ALTER TABLE ONLY uninadelivery.address
    ADD CONSTRAINT address_fk FOREIGN KEY (zipcode, country) REFERENCES uninadelivery.area(zipcode, country) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

